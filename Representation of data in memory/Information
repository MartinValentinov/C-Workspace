The program prints a table of information about each integer type in C. Each line of the table contains the name of the type, the format in which it is printed, how many bytes it occupies, the maximum value of the signed version of the type, the minimum value of the signed version of the type, and the shape of the bare version and the maximum value of the bare version of the type. The program performs safe math operations with type “int”. For the purpose:
A header file “safeint.h” has been created to declare a structure “SafeResult”. The structure has two fields: "value" - of type int (contains the result of the mathematical operation) and "errorflag" of type char (used to contain information about whether an error occurred during the execution of the operation, it can have integer values ​​" 0” and “1”).
In addition to the structure, 5 functions are declared - one for adding two numbers (safeadd) of type int, one for subtracting two numbers (safesubtract) of type int, one for multiplying two numbers of type int (safemultiply), one function for division of two numbers (safedivide) of type int, and one function to convert a character string to type int (safestrtoint). Each function returns a value of type “SafeResult”. The result of the function is written in the "result" field of the "SafeResult" structure that is returned. If an overflow of the type has occurred (overflow or underflow), the errorflag field of the returned structure contains "1". If there is no overflow the field should contain 0.
4 programs were made: safeadd.c, safesubtract.c safemultiply.c and safedivide.c. Each program takes 2 arguments from the terminal and returns respectively: the sum of the two numbers, the difference of the two numbers, the product of the two numbers, and the quotient of the two numbers, using the functions from the safeint module. If the two numbers that are passed are too large (or too small) to fit in the “int” type, programs should notify the user that the arguments exceed the allowed values. An error message should also be displayed if the math operation being performed causes an overflow (underflow or overflow).